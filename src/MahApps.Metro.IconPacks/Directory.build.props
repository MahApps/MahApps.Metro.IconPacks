<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <!--
        This will cause project.assets.json to be written to $(ProjectDir)\obj\ProjectFileWithNoExtension\project.assets.json. 
    -->
    <PropertyGroup>
        <MSBuildProjectExtensionsPath>obj\$(Configuration)\$(MSBuildProjectName)\</MSBuildProjectExtensionsPath>
        <IntermediateOutputPath>$(MSBuildProjectDirectory)\obj\$(Configuration)\$(MSBuildProjectName)</IntermediateOutputPath>
        <OutputPath>$(MSBuildProjectDirectory)\bin\$(Configuration)\$(MSBuildProjectName)</OutputPath>
    </PropertyGroup>

    <PropertyGroup>
        <GenerateLibraryLayout>true</GenerateLibraryLayout>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(MSBuildProjectDirectory)\Themes\**\*.*</DefaultItemExcludes>
        <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb;.xaml;.xml</AllowedOutputExtensionsInPackageBuildOutputFolder>
        <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage;GetMyPackageFiles</TargetsForTfmSpecificBuildOutput>
    </PropertyGroup>

    <ItemGroup Condition="'$(_SdkShortFrameworkIdentifier)' == 'uap'">
        <ProjectReference Include="..\MahApps.Metro.IconPacks.Core\MahApps.Metro.IconPacks.Core.Windows10.csproj" />
    </ItemGroup>
    <ItemGroup Condition="'$(_SdkShortFrameworkIdentifier)' != 'uap'">
        <ProjectReference Include="..\MahApps.Metro.IconPacks.Core\MahApps.Metro.IconPacks.Core.Wpf.csproj" />
    </ItemGroup>

    <ItemGroup>
        <None Include="paket.references" />
    </ItemGroup>

    <!-- known issue https://github.com/NuGet/Home/issues/3891
         Feature : Allow project reference DLLs to be added to the parent nupkg for pack target like IncludeReferencedProjects in nuget.exe

         Workaround: https://github.com/nuget/home/issues/3891#issuecomment-377319939

         maybe use also BuildOnlySettings -->
    <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="ResolveReferences">
        <ItemGroup>
            <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths->WithMetadataValue('ReferenceSourceTarget', 'ProjectReference'))" />
        </ItemGroup>
    </Target>
    <Target Name="GetMyPackageFiles">
        <ItemGroup>
            <BuildOutputInPackage Include="$(OutDir)MahApps.Metro.IconPacks.Core\*.*">
                <TargetPath>MahApps.Metro.IconPacks.Core</TargetPath>
            </BuildOutputInPackage>
            <BuildOutputInPackage Include="$(OutDir)MahApps.Metro.IconPacks.Core\Converter\*.*">
                <TargetPath>MahApps.Metro.IconPacks.Core\Converter</TargetPath>
            </BuildOutputInPackage>
        </ItemGroup>
    </Target>

    <Import Project="$([MSBuild]::GetPathOfFileAbove('Directory.build.props', '$(MSBuildThisFileDirectory)../'))"/>
</Project>